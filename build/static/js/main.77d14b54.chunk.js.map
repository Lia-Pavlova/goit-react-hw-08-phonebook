{"version":3,"sources":["redux/contacts/contacts-selectors.js","components/Clock/Clock.module.css","components/NavigationBar/NavigationBar.styled.jsx","components/NavigationBar/NavigationBar.jsx","components/ApplicationBar/ApplicationBar.styled.jsx","components/FilterBar/FilterBar.styled.jsx","components/FilterBar/FilterBar.jsx","components/Logo/Logo.styled.jsx","components/Logo/Logo.jsx","components/UserCard/default-logo-w500.png","components/UserCard/UserCard.styled.jsx","components/UserCard/UserCard.jsx","components/UserMenu/UserMenu.styled.jsx","components/UserMenu/UserMenu.jsx","components/Clock/Clock.jsx","components/ApplicationBar/ApplicationBar.jsx","App.styled.jsx","components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","App.jsx","index.js","redux/auth/auth-operations.js","utils/notification.js","services/service-api.js","redux/contacts/contacts-operations.js","redux/auth/auth-selectors.js","redux/contacts/contacts-slice.js","redux/auth/auth-slice.js","redux/store.js"],"names":["getContacts","state","contacts","items","sort","a","b","name","localeCompare","getLoadingStatus","isLoading","getFilter","filter","getFilteredContacts","createSelector","toLowerCase","includes","module","exports","StyledNavLink","styled","NavLink","Container","div","NavigationBar","to","activeClassName","Filter","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","display","transition","transitions","create","breakpoints","up","top","left","transform","FilterIconWrapper","padding","height","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","FilterBar","useSelector","dispatch","useDispatch","placeholder","inputProps","value","onChange","e","changeFilter","target","StyledLink","Link","StyledTypography","Typography","StyledIcon","ContactPhoneIcon","Logo","variant","component","sx","flexGrow","fontSize","StyledCardContent","CardContent","ImageThumb","BasicCard","getUserName","email","getUserEmail","Card","minWidth","gutterBottom","src","defaultUserLogo","alt","mb","StyledMenuItem","MenuItem","UserMenu","handleMenu","anchorEl","handleClose","handleLogout","IconButton","size","onClick","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","Clock","useState","Date","time","setTime","useEffect","clockInterval","setInterval","clearInterval","className","s","container","toLocaleTimeString","ApplicationBar","history","useHistory","auth","getAuthStatus","setAnchorEl","handleLogOut","authOperations","push","pathname","Box","AppBar","style","background","border","Toolbar","currentTarget","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","AsyncLoginView","lazy","AsyncRegisterView","AsyncContactsView","AsyncPageErrorView","App","isUserDataLoading","autoClose","fallback","LinearProgress","path","exact","ReactDOM","render","StrictMode","store","loading","persistor","document","getElementById","signUp","createAsyncThunk","userData","rejectWithValue","serviceApi","user","registerUser","data","token","set","notification","signUpSuccess","response","status","statusText","signUpError","logIn","userAuthData","loginUser","logInSuccess","logInError","logOut","_","logoutUser","unset","logOutError","refresh","getState","persistedToken","getCurrentUser","settings","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","warning","text","toast","error","success","errorCode","duplicationNameSuccess","duplicationNumberSuccess","addContactSuccess","addContactError","fetchContactsError","deleteContactSuccess","deleteContactError","updateContactSuccess","updateContactError","axios","defaults","baseURL","headers","Authorization","post","get","postContact","contactData","deleteContact","contactId","delete","patchContact","patch","api","fetch","remove","number","isLoggedIn","contactsSlice","createSlice","initialState","reducers","resetContacts","action","payload","extraReducers","contactsOperations","pending","fulfilled","rejected","map","item","actions","authSlice","authPersistConfig","key","storage","whitelist","authPersistReducer","persistReducer","authReducer","rootReducer","combineReducers","contactsReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devtools","process","persistStore"],"mappings":"4SAEaA,EAAc,SAACC,GAAD,OACzB,YAAIA,EAAMC,SAASC,OAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,KAAKC,cAAcF,EAAEC,UAErDE,EAAmB,SAACR,GAAD,OAAWA,EAAMC,SAASQ,WAE7CC,EAAY,SAACV,GAAD,OAAWA,EAAMC,SAASU,QAEtCC,EAAsBC,YACjC,CAACd,EAAaW,IACd,SAACT,EAAUU,GACT,OAAOV,EAASU,QAAO,qBAAGL,KACnBQ,cAAcC,SAASJ,EAAOG,sB,oBCZzCE,EAAOC,QAAU,CAAC,UAAY,2B,oQCEjBC,EAAgBC,YAAOC,IAAPD,CAAH,8gBAyBbE,EAAYF,IAAOG,IAAV,wQ,2CCHPC,EArBO,WACpB,OACE,cAACF,EAAD,UACE,+BACE,6BACE,eAACH,EAAD,CAAeM,GAAG,SAASC,gBAAgB,WAA3C,UACE,cAAC,IAAD,IADF,aAKF,6BACE,eAACP,EAAD,CAAeM,GAAG,YAAYC,gBAAgB,WAA9C,UACE,cAAC,IAAD,IADF,0BCbGJ,EAAYF,IAAOG,IAAV,kJ,kDCCTI,EAASP,YAAO,MAAPA,EAAc,kBAAGQ,EAAH,EAAGA,MAAH,UAClCC,SAAU,WAEVC,aAAcF,EAAMG,MAAMD,aAC1BE,gBAAiBC,YAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACTJ,gBAAiBC,YAAML,EAAMM,QAAQC,OAAOC,MAAO,MAErDC,YAAaT,EAAMU,QAAQ,GAC3BC,WAAY,GACZC,MAAO,OACPC,QAAS,CACPC,WAAYd,EAAMe,YAAYC,OAAO,eAZL,cAcjChB,EAAMiB,YAAYC,GAAG,MAAQ,CAC5BP,WAAYX,EAAMU,QAAQ,GAC1BE,MAAO,SAhByB,cAkBjCZ,EAAMiB,YAAYC,GAAG,MAAQ,CAC5BP,WAAYX,EAAMU,QAAQ,GAC1BE,MAAO,OACPX,SAAU,WACVkB,IAAK,MACLC,KAAM,MACNC,UAAW,0BAxBqB,KA4BvBC,EAAoB9B,YAAO,MAAPA,EAAc,kBAAgB,CAC7D+B,QAD6C,EAAGvB,MACjCU,QAAQ,EAAG,GAC1Bc,OAAQ,OACRvB,SAAU,WACVwB,cAAe,OACfZ,QAAS,OACTa,WAAY,SACZC,eAAgB,aAGLC,EAAkBpC,YAAOqC,IAAPrC,EAAkB,gBAAGQ,EAAH,EAAGA,MAAH,MAAgB,CAC/D8B,MAAO,UACP,wBAAwB,aACtBP,QAASvB,EAAMU,QAAQ,EAAG,EAAG,EAAG,GAEhCqB,YAAY,cAAD,OAAgB/B,EAAMU,QAAQ,GAA9B,KACXI,WAAYd,EAAMe,YAAYC,OAAO,SACrCJ,MAAO,OACPkB,MAAO,WACN9B,EAAMiB,YAAYC,GAAG,MAAQ,CAC5BN,MAAO,QACP,UAAW,CACTA,MAAO,c,iBCwBAoB,EAlDG,WAEhB,IAAMhD,EAASiD,YAAYlD,KAErBmD,EAAWC,cAqBjB,OAEE,cADA,CACCpC,EAAD,WACE,cAACuB,EAAD,UACE,cAAC,IAAD,MAEF,cAACM,EAAD,CACEQ,YAAY,qBACZC,WAAY,CAAE,aAAc,UAC5BC,MAAOtD,EAIPuD,SAAU,SAACC,GAAD,OAAON,EAASO,YAAaD,EAAEE,OAAOJ,e,8BC5D3CK,GAAanD,YAAOoD,IAAPpD,CAAH,wFAMVqD,GAAmBrD,YAAOsD,IAAPtD,CAAH,8NAUhBuD,GAAavD,YAAOwD,KAAPxD,CAAH,6GCRRyD,GAXF,WACX,OACE,cAACJ,GAAD,CAAkBK,QAAQ,KAAKC,UAAU,MAAMC,GAAI,CAAEC,SAAU,GAA/D,SACE,eAACV,GAAD,CAAY9C,GAAG,IAAf,UACE,cAACkD,GAAD,CAAYO,SAAS,UADvB,kB,wECLS,OAA0B,8C,UCG5BC,GAAoB/D,YAAOgE,KAAPhE,CAAH,iGAMjBiE,GAAajE,IAAOG,IAAV,6I,SCsBR+D,GAxBG,WAChB,IAAM/E,EAAOsD,YAAY0B,MACnBC,EAAQ3B,YAAY4B,MAE1B,OACE,cAACC,GAAA,EAAD,CAAMV,GAAI,CAAEW,SAAU,KAAtB,SACE,eAACR,GAAD,WACE,cAACT,EAAA,EAAD,CAAYM,GAAI,CAAEE,SAAU,IAAMxB,MAAM,iBAAiBkC,cAAY,EAArE,0BAGA,cAACP,GAAD,UACE,qBAAKQ,IAAKC,GAAiBC,IAAI,OAEjC,eAACrB,EAAA,EAAD,CAAYM,GAAI,CAAEgB,GAAI,KAAOtC,MAAM,iBAAnC,mBACQ,4BAAInD,OAEZ,eAACmE,EAAA,EAAD,CAAYM,GAAI,CAAEgB,GAAI,KAAOtC,MAAM,iBAAnC,oBACS,4BAAI8B,a,UCrBRS,GAAiB7E,YAAO8E,KAAP9E,CAAH,sICkDZ+E,GA7CE,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,WAAYC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrD,OACE,qCACE,cAACC,GAAA,EAAD,CACEC,KAAK,QACL,aAAW,0BACX,gBAAc,cACd,gBAAc,OACdC,QAASN,EACT1C,MAAM,UANR,SAQE,cAAC,KAAD,MAEF,eAACiD,GAAA,EAAD,CACEC,GAAG,cACHP,SAAUA,EACVQ,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEdG,KAAMC,QAAQd,GACde,QAASd,EAbX,UAeE,cAAC,GAAD,IACA,eAACL,GAAD,CAAgBS,QAASH,EAAzB,UACE,cAAC,KAAD,IADF,mB,qBCjCO,SAASc,KACtB,MAAwBC,mBAAS,IAAIC,MAArC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OAVAC,qBAAU,WACR,IAAMC,EAAgBC,aAAY,WAChCH,EAAQ,IAAIF,QACX,KAEH,OAAO,WACLM,cAAcF,MAEf,IAGD,qBAAKG,UAAWC,KAAEC,UAAlB,SACE,gDAAmBR,EAAKS,0BCJ9B,I,GA+CeC,GA/CQ,WACrB,IAAMC,EAAUC,cACVC,EAAOxE,YAAYyE,MACnBxE,EAAWC,cACjB,EAAgCuD,mBAAS,MAAzC,mBAAOjB,EAAP,KAAiBkC,EAAjB,KAEMC,EAAY,uCAAG,sBAAAnI,EAAA,sDACnByD,EAAS2E,OACTF,EAAY,MACZJ,EAAQO,KAAK,CAAEC,SAAU,WAHN,2CAAH,qDAMlB,OACE,cAACC,EAAA,EAAD,CAAK5D,GAAI,CAAEC,SAAU,GAArB,SACE,cAAC4D,EAAA,EAAD,CACEhH,SAAS,QACTiH,MAAO,CACLC,WACE,8FACFC,OAAQ,aALZ,SAQE,cAACC,EAAA,EAAD,UACE,eAAC,EAAD,WACE,cAAC,GAAD,IACA,cAAC5B,GAAD,IACCgB,GAAQ,cAAC,EAAD,KACPA,GAAQ,cAAC,EAAD,IACTA,GACC,cAAC,GAAD,CACEjC,WAAY,SAAAhC,GACVmE,EAAYnE,EAAE8E,gBAEhB7C,SAAUA,EACVC,YAAa,WACXiC,EAAY,OAEdhC,aAAciC,cC5CflH,GANGF,IAAOG,IAAV,6F,+CCYA4H,GAVM,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAgD,IAAtCC,kBAAsC,MAAzB,IAAyB,EAAjBC,EAAiB,mBAChEjB,EAAOxE,YAAYyE,MAEzB,OACE,cAAC,IAAD,6BAAWgB,GAAX,aACGjB,EAAOe,EAAW,cAAC,IAAD,CAAU3H,GAAI4H,Q,0CCWxBE,GAhBK,SAAC,GAKd,IAJLH,EAII,EAJJA,SAII,IAHJI,kBAGI,aAFJH,kBAEI,MAFS,YAET,EADDC,EACC,mBAEEG,EADO5F,YAAYyE,OACMkB,EAE/B,OACE,cAAC,IAAD,6BAAWF,GAAX,aACGG,EAAiB,cAAC,IAAD,CAAUhI,GAAI4H,IAAiBD,MCDjDM,GAAiBC,gBAAK,kBAC1B,uDAEIC,GAAoBD,gBAAK,kBAC7B,uDAEIE,GAAoBF,gBAAK,kBAC7B,8DAEIG,GAAqBH,gBAAK,kBAC9B,iCAoDaI,GAjDH,WACV,IAAMC,EAAoBnG,YAAYpD,MAChCqD,EAAWC,cAMjB,OAJA2D,qBAAU,WACR5D,EAAS2E,SACR,CAAC3E,IAGF,qCACE,cAAC,GAAD,IAEA,cAAC,IAAD,CACEmG,UAAW,KACXpI,SAAS,aACTG,gBAAgB,QAGlB,cAAC,GAAD,UACE,cAAC,WAAD,CACEkI,SACE,cAACtB,EAAA,EAAD,CAAK5D,GAAI,CAAExC,MAAO,QAAlB,SACE,cAAC2H,EAAA,EAAD,CAAgBnF,GAAI,CAAE+D,WAAY,eAHxC,SAOE,eAAC,IAAD,WACE,cAAC,GAAD,CAAaqB,KAAK,IAAIC,OAAK,EAACb,YAAU,EAAtC,SACE,cAAC,IAAD,CAAU/H,GAAG,aAEf,cAAC,GAAD,CAAa2I,KAAK,SAASZ,YAAU,EAArC,SACE,cAACE,GAAD,MAEF,cAAC,GAAD,CAAaU,KAAK,YAAYZ,YAAU,EAAxC,SACE,cAACI,GAAD,MAEF,cAAC,GAAD,CAAcQ,KAAK,YAAnB,UACIJ,GAAqB,cAACH,GAAD,MAEzB,cAAC,GAAD,UACE,cAACC,GAAD,iB,SC1DdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,KAAjB,SACE,cAAC,IAAD,CAAaC,QAAS,KAAMC,UAAWA,KAAvC,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRC,SAASC,eAAe,U,6NCfbC,EAASC,YACpB,cADoC,uCAEpC,WAAOC,EAAP,4BAAA3K,EAAA,6DAAmB4K,EAAnB,EAAmBA,gBAAnB,kBAE2BC,IAAWC,KAAKC,aAAaJ,GAFxD,uBAEYK,EAFZ,EAEYA,KACRH,IAAWI,MAAMC,IAAIF,EAAKC,OAC1BE,IAAaC,cAAcJ,EAAKF,KAAK5K,MAJzC,kBAKW8K,GALX,gDAQMK,SAAYC,EARlB,EAQkBA,OAAQC,EAR1B,EAQ0BA,WAEtBJ,IAAaK,YAAYF,GAV7B,kBAWWV,EAAgB,CAAEU,SAAQC,gBAXrC,0DAFoC,yDAkBzBE,EAAQf,YACnB,aADmC,uCAEnC,WAAOgB,EAAP,4BAAA1L,EAAA,6DAAuB4K,EAAvB,EAAuBA,gBAAvB,kBAE2BC,IAAWC,KAAKa,UAAUD,GAFrD,uBAEYV,EAFZ,EAEYA,KACRH,IAAWI,MAAMC,IAAIF,EAAKC,OAC1BE,IAAaS,aAAaZ,EAAKF,KAAK5K,MAJxC,kBAKW8K,GALX,gDAQMK,SAAYC,EARlB,EAQkBA,OAAQC,EAR1B,EAQ0BA,WAEtBJ,IAAaU,WAAWP,GAV5B,kBAWWV,EAAgB,CAAEU,SAAQC,gBAXrC,0DAFmC,yDAkBxBO,EAASpB,YACpB,cADoC,uCAEpC,WAAOqB,EAAP,wBAAA/L,EAAA,6DAAY4K,EAAZ,EAAYA,gBAAZ,kBAEUC,IAAWC,KAAKkB,aAF1B,OAGInB,IAAWI,MAAMgB,QAHrB,8DAMMZ,SAAYC,EANlB,EAMkBA,OAAQC,EAN1B,EAM0BA,WAEtBJ,IAAae,YAAYZ,GAR7B,kBASWV,EAAgB,CAAEU,SAAQC,gBATrC,yDAFoC,yDAgBzBY,EAAUzB,YACrB,eADqC,uCAErC,WAAOqB,EAAP,kCAAA/L,EAAA,yDAAYoM,EAAZ,EAAYA,SAAUxB,EAAtB,EAAsBA,gBAAtB,SAEUhL,EAAQwM,IACRC,EAAiBzM,EAAMoI,KAAKiD,MAHtC,yCAMaL,EAAgB,CAAEU,OAAQ,KAAMC,WAAY,oBANzD,cASIV,IAAWI,MAAMC,IAAImB,GATzB,SAU2BxB,IAAWC,KAAKwB,iBAV3C,uBAUYtB,EAVZ,EAUYA,KAVZ,kBAWWA,GAXX,gDAcMK,SAAYC,EAdlB,EAckBA,OAAQC,EAd1B,EAc0BA,WAEtBJ,IAAae,YAAYZ,GAhB7B,kBAiBWV,EAAgB,CAAEU,SAAQC,gBAjBrC,0DAFqC,0D,gCCxDvC,YAGMgB,GAHN,OAGiB,CACf/K,SAAU,aACVoI,UAAW,IACX4C,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAuFN1B,EAAe,CACnB2B,QArFc,SAACC,GACfC,IAAMC,MAAMF,EAAMR,IAqFlBW,QAlFc,SAACH,GACfC,IAAME,QAAQH,EAAMR,IAkFpBnB,cA/EoB,SAAClL,GACrBiL,EAAa+B,QAAb,2DACsDhN,EADtD,OA+EA0L,aAhEmB,SAAC1L,GACpBiL,EAAa+B,QAAb,mBAAiChN,EAAjC,OAgEAsL,YA3EkB,SAAC2B,GACD,MAAdA,GACFhC,EAAa2B,QAAQ,uDAGL,MAAdK,GACFhC,EAAa2B,QAAQ,oDAsEvBjB,WA9DiB,SAACsB,GACA,MAAdA,GACFhC,EAAa2B,QAAQ,4BA6DvBZ,YAzDkB,SAACiB,GACD,MAAdA,GACFhC,EAAa2B,QAAQ,mCAwDvBM,uBApD6B,WAC7BjC,EAAa2B,QAAQ,mDAoDrBO,yBAjD+B,WAC/BlC,EAAa2B,QAAQ,qDAiDrBQ,kBA9CwB,WACxBnC,EAAa+B,QAAQ,oCA8CrBK,gBA3CsB,SAACJ,GACL,MAAdA,GACFhC,EAAa2B,QAAQ,2BA0CvBU,mBAtCyB,SAACL,GACR,MAAdA,GACFhC,EAAa2B,QAAQ,4BAqCvBW,qBAjC2B,WAC3BtC,EAAa+B,QAAQ,iCAiCrBQ,mBA9ByB,SAACP,GACR,MAAdA,GACFhC,EAAa2B,QAAQ,4BA6BvBa,qBAzB2B,WAC3BxC,EAAa+B,QAAQ,sCAyBrBU,mBAtByB,SAACT,GACR,MAAdA,GACFhC,EAAa2B,QAAQ,0BAuBV3B,O,8EChHf0C,IAAMC,SAASC,QAFE,wCAIjB,IAAM9C,EAAQ,CACZC,IADY,SACRD,GACF4C,IAAMC,SAASE,QAAQlM,OAAOmM,cAA9B,iBAAwDhD,IAE1DgB,MAJY,WAKV4B,IAAMC,SAASE,QAAQlM,OAAOmM,cAAgB,KAI5ClD,EAAY,uCAAG,WAAMJ,GAAN,SAAA3K,EAAA,sEACN6N,IAAMK,KAAK,eAAgBvD,GADrB,mFAAH,sDAIZ2B,EAAc,uCAAG,sBAAAtM,EAAA,sEACR6N,IAAMM,IAAI,kBADF,mFAAH,qDAIdxC,EAAS,uCAAG,WAAMD,GAAN,SAAA1L,EAAA,sEACH6N,IAAMK,KAAK,eAAgBxC,GADxB,mFAAH,sDAITM,EAAU,uCAAG,sBAAAhM,EAAA,sEACJ6N,IAAMK,KAAK,iBADP,mFAAH,qDAIVvO,EAAW,uCAAG,sBAAAK,EAAA,sEACL6N,IAAMM,IAAI,aADL,mFAAH,qDAIXC,EAAW,uCAAG,WAAMC,GAAN,SAAArO,EAAA,sEACL6N,IAAMK,KAAK,YAAaG,GADnB,mFAAH,sDAIXC,EAAa,uCAAG,WAAMC,GAAN,SAAAvO,EAAA,sEACP6N,IAAMW,OAAN,oBAA0BD,IADnB,mFAAH,sDAIbE,EAAY,uCAAG,WAAOF,EAAWF,GAAlB,SAAArO,EAAA,sEACN6N,IAAMa,MAAN,oBAAyBH,GAAaF,GADhC,mFAAH,wDAIZM,EAAM,CACV7D,KAAM,CACJC,eACAuB,iBACAX,YACAK,cAEFnM,SAAU,CACRF,cACAyO,cACAE,gBACAG,gBAEFxD,SAGa0D,O,6NC3DFC,EAAQlE,YACnB,iBADmC,uCAEnC,WAAOqB,EAAP,4BAAA/L,EAAA,6DAAY4K,EAAZ,EAAYA,gBAAZ,kBAE2BC,IAAWhL,SAASF,cAF/C,uBAEYqL,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,8CAMMK,SAAYC,EANlB,EAMkBA,OAAQC,EAN1B,EAM0BA,WAEtBJ,IAAaqC,mBAAmBlC,GARpC,kBASWV,EAAgB,CAAEU,SAAQC,gBATrC,yDAFmC,yDAgBxB2C,EAAOxD,YAClB,gBADkC,uCAElC,WAAO2D,EAAP,4BAAArO,EAAA,6DAAsB4K,EAAtB,EAAsBA,gBAAtB,kBAE2BC,IAAWhL,SAASuO,YAAYC,GAF3D,uBAEYrD,EAFZ,EAEYA,KACRG,IAAamC,oBAHjB,kBAIWtC,GAJX,gDAOMK,SAAYC,EAPlB,EAOkBA,OAAQC,EAP1B,EAO0BA,WAEtBJ,IAAaoC,gBAAgBjC,GATjC,kBAUWV,EAAgB,CAAEU,SAAQC,gBAVrC,0DAFkC,yDAiBvBsD,EAASnE,YACpB,kBADoC,uCAEpC,WAAO6D,EAAP,wBAAAvO,EAAA,6DAAoB4K,EAApB,EAAoBA,gBAApB,kBAEUC,IAAWhL,SAASyO,cAAcC,GAF5C,cAGIpD,IAAasC,uBAHjB,kBAIWc,GAJX,8CAOMlD,SAAYC,EAPlB,EAOkBA,OAAQC,EAP1B,EAO0BA,WAEtBJ,IAAauC,mBAAmBpC,GATpC,kBAUWV,EAAgB,CAAEU,SAAQC,gBAVrC,yDAFoC,yDAiBzBmD,EAAQhE,YACnB,iBADmC,uCAEnC,+CAAA1K,EAAA,6DAASuG,EAAT,EAASA,GAAIrG,EAAb,EAAaA,KAAM4O,EAAnB,EAAmBA,OAAYlE,EAA/B,EAA+BA,gBAA/B,kBAE2BC,IAAWhL,SAAS4O,aAAalI,EAAI,CAC1DrG,OACA4O,WAJN,uBAEY9D,EAFZ,EAEYA,KAIRG,IAAawC,uBANjB,kBAOW3C,GAPX,gDAUMK,SAAYC,EAVlB,EAUkBA,OAAQC,EAV1B,EAU0BA,WAEtBJ,IAAayC,mBAAmBtC,GAZpC,kBAaWV,EAAgB,CAAEU,SAAQC,gBAbrC,0DAFmC,0D,gCCtDrC,wIAAO,IAAMrG,EAAc,SAAAtF,GAAK,OAAIA,EAAMoI,KAAK8C,KAAK5K,MACvCkF,EAAe,SAAAxF,GAAK,OAAIA,EAAMoI,KAAK8C,KAAK3F,OACxC8C,EAAgB,SAAArI,GAAK,OAAIA,EAAMoI,KAAK+G,YACpC3O,EAAmB,SAAAR,GAAK,OAAIA,EAAMoI,KAAK3H,Y,iICA9C2O,EAAgBC,YAAY,CAChC/O,KAAM,eACNgP,aAAc,CACZpP,MAAO,GACPS,OAAQ,GACRF,WAAW,EACX4M,MAAO,MAETkC,SAAU,CACRC,cAAe,SAACxP,GACdA,EAAME,MAAQ,IAEhBkE,aAAc,SAACpE,EAAOyP,GACpBzP,EAAMW,OAAS8O,EAAOC,UAG1BC,eAAa,mBACVC,IAAyBC,SAAU,SAAC7P,GACnCA,EAAMS,WAAY,KAFT,cAIVmP,IAAyBE,WAAY,SAAC9P,EAAOyP,GAC5CzP,EAAMS,WAAY,EAClBT,EAAME,MAAQuP,EAAOC,WANZ,cAQVE,IAAyBG,UAAW,SAAC/P,EAAOyP,GAC3CzP,EAAMS,WAAY,EAClBT,EAAMqN,MAAQoC,EAAOC,WAVZ,cAYVE,IAAwBC,SAAU,SAAC7P,GAClCA,EAAMS,WAAY,KAbT,cAeVmP,IAAwBE,WAAY,SAAC9P,EAAOyP,GAC3CzP,EAAMS,WAAY,EAClBT,EAAME,MAAMuI,KAAKgH,EAAOC,YAjBf,cAmBVE,IAAwBG,UAAW,SAAC/P,EAAOyP,GAC1CzP,EAAMS,WAAY,EAClBT,EAAMqN,MAAQoC,EAAOC,WArBZ,cAuBVE,IAA0BC,SAAU,SAAC7P,GACpCA,EAAMS,WAAY,KAxBT,cA0BVmP,IAA0BE,WAAY,SAAC9P,EAAOyP,GAC7CzP,EAAMS,WAAY,EAClBT,EAAME,MAAQF,EAAME,MAAMS,QAAO,qBAAGgG,KAAgB8I,EAAOC,cA5BlD,cA8BVE,IAA0BG,UAAW,SAAC/P,EAAOyP,GAC5CzP,EAAMS,WAAY,EAClBT,EAAMqN,MAAQoC,EAAOC,WAhCZ,cAkCVE,IAAyBC,SAAU,SAAC7P,GACnCA,EAAMS,WAAY,KAnCT,cAqCVmP,IAAyBE,WAAY,SAAC9P,EAAOyP,GAC5CzP,EAAMS,WAAY,EAClBT,EAAME,MAAQF,EAAME,MAAM8P,KAAI,SAACC,GAC7B,OAAIA,EAAKtJ,KAAO8I,EAAOC,QAAQ/I,GAAWsJ,EACnCR,EAAOC,cAzCP,cA4CVE,IAAyBG,UAAW,SAAC/P,EAAOyP,GAC3CzP,EAAMS,WAAY,EAClBT,EAAMqN,MAAQoC,EAAOC,WA9CZ,KAmDR,EAAwCN,EAAcc,QAA9CV,EAAR,EAAQA,cAAepL,EAAvB,EAAuBA,aACfgL,MAAf,S,mKCGee,EA5DGd,YAAY,CAC5B/O,KAAM,OACNgP,aAbmB,CACnBpE,KAAM,CACJ5K,KAAM,KACNiF,MAAO,MAET8F,MAAO,KACP8D,YAAY,EACZ1O,WAAW,EACX4M,MAAO,MAMPsC,eAAa,mBACVnH,IAAsBqH,SAAU,SAAA7P,GAC/BA,EAAMS,WAAY,KAFT,cAIV+H,IAAsBsH,WAAY,SAAC9P,EAAOyP,GACzCzP,EAAMkL,KAAOuE,EAAOC,QAAQxE,KAC5BlL,EAAMqL,MAAQoE,EAAOC,QAAQrE,MAC7BrL,EAAMmP,YAAa,EACnBnP,EAAMS,WAAY,KART,cAUV+H,IAAsBuH,UAAW,SAAC/P,EAAOyP,GACxCzP,EAAMS,WAAY,EAClBT,EAAMqN,MAAQoC,EAAOC,WAZZ,cAcVlH,IAAqBqH,SAAU,SAAA7P,GAC9BA,EAAMS,WAAY,KAfT,cAiBV+H,IAAqBsH,WAAY,SAAC9P,EAAOyP,GACxCzP,EAAMkL,KAAOuE,EAAOC,QAAQxE,KAC5BlL,EAAMqL,MAAQoE,EAAOC,QAAQrE,MAC7BrL,EAAMmP,YAAa,EACnBnP,EAAMS,WAAY,KArBT,cAuBV+H,IAAqBuH,UAAW,SAAC/P,EAAOyP,GACvCzP,EAAMS,WAAY,EAClBT,EAAMqN,MAAQoC,EAAOC,WAzBZ,cA2BVlH,IAAsBqH,SAAU,SAAA7P,GAC/BA,EAAMS,WAAY,KA5BT,cA8BV+H,IAAsBsH,WAAY,SAAC9P,EAAOyP,GACzCzP,EAAMkL,KAAK5K,KAAO,KAClBN,EAAMkL,KAAK3F,MAAQ,KACnBvF,EAAMqL,MAAQ,KACdrL,EAAMmP,YAAa,EACnBnP,EAAMS,WAAY,KAnCT,cAqCV+H,IAAsBuH,UAAW,SAAC/P,EAAOyP,GACxCzP,EAAMS,WAAY,EAClBT,EAAMqN,MAAQoC,EAAOC,WAvCZ,cAyCVlH,IAAuBqH,SAAU,SAAA7P,GAChCA,EAAMS,WAAY,KA1CT,cA4CV+H,IAAuBsH,WAAY,SAAC9P,EAAOyP,GAC1CzP,EAAMkL,KAAOuE,EAAOC,QACpB1P,EAAMmP,YAAa,EACnBnP,EAAMS,WAAY,KA/CT,cAiDV+H,IAAuBuH,UAAW,SAAC/P,EAAOyP,GACzCzP,EAAMS,WAAY,EAClBT,EAAMmP,YAAa,EACnBnP,EAAMqN,MAAQoC,EAAOC,WApDZ,KAyDf,Q,QC3DMU,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAqBC,YAAeL,EAAmBM,GAEvDC,EAAcC,YAAgB,CAClCxI,KAAMoI,EACNvQ,SAAU4Q,MAGCrG,EAAQsG,YAAe,CAClCC,QAASJ,EACTK,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAGhEC,UAAUC,IAGCjH,EAAYkH,YAAapH,K","file":"static/js/main.77d14b54.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nexport const getContacts = (state) =>\n  [...state.contacts.items].sort((a, b) => a.name.localeCompare(b.name))\n\nexport const getLoadingStatus = (state) => state.contacts.isLoading\n\nexport const getFilter = (state) => state.contacts.filter\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    )\n  },\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Clock_container__37Vd0\"};","import styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom'\n\nexport const StyledNavLink = styled(NavLink)`\n  position: relative;\n  display: flex;\n  // font-size: 25px;\n  font-weight: 600;\n  font-family: Dancing;\n  text-shadow: -2px -1px 2px rgba(59, 22, 4, 0.425);\n\n  color: #fff;\n  text-decoration: none;\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n    display: block;\n    width: 100%;\n    transform: translate(-50%, 19px) scaleX(0);\n    border: 1.5px solid #fff;\n  }\n  &.selected::after {\n    transform: translate(-50%, 19px) scaleX(1);\n  }\n`\n\nexport const Container = styled.div`\n  box-sizing: content-box;\n  align-self: center;\n\n  ul {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li {\n    display: flex;\n  }\n\n  li:not(:last-of-type) {\n    margin-right: 20px;\n  }\n`\n","import { Container, StyledNavLink } from './NavigationBar.styled';\nimport AppRegistrationIcon from '@mui/icons-material/AppRegistration';\nimport LoginIcon from '@mui/icons-material/Login';\n\nconst NavigationBar = () => {\n  return (\n    <Container>\n      <ul>\n        <li>\n          <StyledNavLink to=\"/login\" activeClassName=\"selected\">\n            <LoginIcon />\n            Login\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink to=\"/register\" activeClassName=\"selected\">\n            <AppRegistrationIcon />\n            Registration\n          </StyledNavLink>\n        </li>\n      </ul>\n    </Container>\n  );\n};\n\nexport default NavigationBar;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n`;\n","import { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\n\nexport const Filter = styled('div')(({ theme }) => ({\n  position: 'relative',\n\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 12,\n  width: '100%',\n  display: {\n    transition: theme.transitions.create('transform'),\n  },\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n  [theme.breakpoints.up('md')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n    position: 'absolute',\n    top: '50%',\n    left: '35%',\n    transform: 'translate(-50%, -50%)',\n  },\n}));\n\nexport const FilterIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    color: '#524240',\n    [theme.breakpoints.up('md')]: {\n      width: '0.1ch',\n      '&:focus': {\n        width: '25ch',\n      },\n    },\n  },\n}));\n","import { useSelector, useDispatch } from 'react-redux'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { Filter, FilterIconWrapper, StyledInputBase } from './FilterBar.styled'\nimport { getFilter } from '../../redux/contacts/contacts-selectors'\nimport { changeFilter } from '../../redux/contacts/contacts-slice'\n// import { changeFilter } from '../../redux/contacts/contacts-action'\n// import { theme } from '../../../src/common/theme'\n// import ClearIcon from '@mui/icons-material/Clear'\n// import useMediaQuery from '@mui/material/useMediaQuery'\n// import { alpha, styled } from '@mui/material/styles'\nimport { IconButton } from '@mui/material'\n\n// const SearchContactByName = styled('div')(({ theme }) => ({\n//   position: 'absolute',\n//   borderRadius: theme.shape.borderRadius,\n//   backgroundColor: alpha(theme.palette.common.white, 0.15),\n//   '&:hover': {\n//     backgroundColor: alpha(theme.palette.common.white, 0.25),\n//   },\n//   marginLeft: 0,\n//   width: '100%',\n//   // [theme.breakpoints.up('sm')]: {\n//   //   marginLeft: theme.spacing(1),\n//   //   width: 'auto',\n//   // },\n// }))\n\nconst FilterBar = () => {\n  // const isBeforeMediumScreen = useMediaQuery(theme.breakpoints.down('md'))\n  const filter = useSelector(getFilter)\n  // const searchContactInputIsFilled = filter !== ''\n  const dispatch = useDispatch()\n\n  // const onSearchContactFocus = () => {\n  //   if (!isBeforeMediumScreen) return\n  //   showAddContactBtn(false)\n  // }\n\n  // const onSearchContactBlur = (e) => {\n  //   if (!isBeforeMediumScreen || e.target.value.trim() !== '') return\n  //   showAddContactBtn(true)\n  //   if (e.target.value.trim() === '') e.target.value = ''\n  // }\n\n  // const onFilterChange = (e) => {\n  //   dispatch(changeFilter(e.target.value.trim()))\n  // }\n  // const onClearBtnClick = () => {\n  //   dispatch(changeFilter(''))\n  //   //   showAddContactBtn(true)\n  // }\n\n  return (\n    // <SearchContactByName>\n    <Filter>\n      <FilterIconWrapper>\n        <SearchIcon />\n      </FilterIconWrapper>\n      <StyledInputBase\n        placeholder=\"Find by name…\"\n        inputProps={{ 'aria-label': 'filter' }}\n        value={filter}\n        // onChange={onFilterChange}\n        // onFocus={onSearchContactFocus}\n        // onBlur={onSearchContactBlur}\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n      />\n      {/* {searchContactInputIsFilled && (\n          <IconButton aria-label=\"clear\" onClick={onClearBtnClick}>\n            <ClearIcon />\n          </IconButton>\n        )} */}\n    </Filter>\n    // </SearchContactByName>\n  )\n}\n\nexport default FilterBar\n","import { Link } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport styled from '@emotion/styled';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  color: #fff;\n  text-decoration: none;\n`;\n\nexport const StyledTypography = styled(Typography)`\n  display: flex;\n  flex-grow: 0;\n  align-self: center;\n  font-size: 45px;\n  font-family: Dancing Script, cursive;\n  text-shadow: -4px -4px 3px rgba(59, 22, 4, 0.425);\n  font-weight: 700;\n`;\n\nexport const StyledIcon = styled(ContactPhoneIcon)`\n  display: block;\n  align-self: center;\n  margin-right: 18px;\n  color: #fff;\n`;\n","import { StyledLink, StyledTypography, StyledIcon } from './Logo.styled';\n\nconst Logo = () => {\n  return (\n    <StyledTypography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n      <StyledLink to=\"/\">\n        <StyledIcon fontSize=\"large\" />\n        Phonebook\n      </StyledLink>\n    </StyledTypography>\n  );\n};\n\nexport default Logo;\n","export default __webpack_public_path__ + \"static/media/default-logo-w500.b82381d7.png\";","import styled from '@emotion/styled';\nimport CardContent from '@mui/material/CardContent';\n\nexport const StyledCardContent = styled(CardContent)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ImageThumb = styled.div`\n  margin: 10px auto;\n  width: 120px;\n  height: 120px;\n\n  img {\n    display: block;\n    height: 100%;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\nimport defaultUserLogo from './default-logo-w500.png';\nimport { StyledCardContent, ImageThumb } from './UserCard.styled';\nimport { getUserName, getUserEmail } from '../../redux/auth/auth-selectors';\n\nconst BasicCard = () => {\n  const name = useSelector(getUserName);\n  const email = useSelector(getUserEmail);\n\n  return (\n    <Card sx={{ minWidth: 275 }}>\n      <StyledCardContent>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          User profile\n        </Typography>\n        <ImageThumb>\n          <img src={defaultUserLogo} alt=\"\" />\n        </ImageThumb>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          name: <b>{name}</b>\n        </Typography>\n        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n          email: <b>{email}</b>\n        </Typography>\n      </StyledCardContent>\n    </Card>\n  );\n};\n\nexport default BasicCard;\n","import styled from '@emotion/styled';\nimport MenuItem from '@mui/material/MenuItem';\n\nexport const StyledMenuItem = styled(MenuItem)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #f00;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport Menu from '@mui/material/Menu';\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport BasicCard from '../UserCard';\nimport { StyledMenuItem } from './UserMenu.styled';\n\nconst UserMenu = ({ handleMenu, anchorEl, handleClose, handleLogout }) => {\n  return (\n    <>\n      <IconButton\n        size=\"large\"\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n        <AccountCircle />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <BasicCard />\n        <StyledMenuItem onClick={handleLogout}>\n          <ExitToAppIcon />\n          Logout\n        </StyledMenuItem>\n      </Menu>\n    </>\n  );\n};\n\nUserMenu.propTypes = {\n  handleMenu: PropTypes.func.isRequired,\n  anchorEl: PropTypes.any,\n  handleClose: PropTypes.func.isRequired,\n  handleLogout: PropTypes.func.isRequired,\n};\n\nexport default UserMenu;\n","import { useState, useEffect } from 'react';\n\nimport s from './Clock.module.css';\n\nexport default function Clock() {\n  const [time, setTime] = useState(new Date());\n\n  useEffect(() => {\n    const clockInterval = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(clockInterval);\n    };\n  }, []);\n\n  return (\n    <div className={s.container}>\n      <p> Current time: {time.toLocaleTimeString()}</p>\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport NavigationBar from '../NavigationBar';\nimport { Container } from './ApplicationBar.styled';\nimport FilterBar from '../FilterBar';\nimport Logo from '../Logo/Logo';\nimport UserMenu from '../UserMenu';\nimport { getAuthStatus } from '../../redux/auth/auth-selectors';\nimport * as authOperations from '../../redux/auth/auth-operations';\nimport Clock from '../../components/Clock/Clock';\n\nconst ApplicationBar = () => {\n  const history = useHistory();\n  const auth = useSelector(getAuthStatus);\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleLogOut = async () => {\n    dispatch(authOperations.logOut());\n    setAnchorEl(null);\n    history.push({ pathname: '/login' });\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar\n        position=\"fixed\"\n        style={{\n          background:\n            'linear-gradient(to right,#e9ce36c2 0%,#f3a15d 30%,#ea2a2abb 50%,#f3a15d 70%,#e9ce36c2 100%)',\n          border: '#e98e185e',\n        }}\n      >\n        <Toolbar>\n          <Container>\n            <Logo />\n            <Clock />\n            {auth && <FilterBar />}\n            {!auth && <NavigationBar />}\n            {auth && (\n              <UserMenu\n                handleMenu={e => {\n                  setAnchorEl(e.currentTarget);\n                }}\n                anchorEl={anchorEl}\n                handleClose={() => {\n                  setAnchorEl(null);\n                }}\n                handleLogout={handleLogOut}\n              />\n            )}\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default ApplicationBar;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  padding-top: 70px;\n  margin: 0 auto;\n  max-width: 1280px;\n`;\n\nexport default Container;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getAuthStatus } from '../../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({ children, redirectTo = '/', ...routeProps }) => {\n  const auth = useSelector(getAuthStatus);\n\n  return (\n    <Route {...routeProps}>\n      {auth ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n};\n\nexport default PrivateRoute;\n","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getAuthStatus } from '../../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  children,\n  restricted = false,\n  redirectTo = '/contacts',\n  ...routeProps\n}) => {\n  const auth = useSelector(getAuthStatus);\n  const shouldRedirect = auth && restricted;\n\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n};\n\nexport default PublicRoute;\n","import { useEffect, lazy, Suspense } from 'react';\nimport { Switch, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\nimport * as authOperations from './redux/auth/auth-operations';\nimport ApplicationBar from './components/ApplicationBar';\nimport Container from './App.styled';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { getLoadingStatus } from './redux/auth/auth-selectors';\n// import Clock from './components/Clock/Clock';\n\nconst AsyncLoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login-page\" */),\n);\nconst AsyncRegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register-page\" */),\n);\nconst AsyncContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-page\" */),\n);\nconst AsyncPageErrorView = lazy(() =>\n  import('./views/PageErrorView' /* webpackChunkName: \"404-page\" */),\n);\n\nconst App = () => {\n  const isUserDataLoading = useSelector(getLoadingStatus);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.refresh());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ApplicationBar />\n      {/* <Clock /> */}\n      <ToastContainer\n        autoClose={2500}\n        position=\"top-center\"\n        backgroundColor=\"red\"\n      />\n\n      <Container>\n        <Suspense\n          fallback={\n            <Box sx={{ width: '100%' }}>\n              <LinearProgress sx={{ background: '#eacb04' }} />\n            </Box>\n          }\n        >\n          <Switch>\n            <PublicRoute path=\"/\" exact restricted>\n              <Redirect to=\"/login\" />\n            </PublicRoute>\n            <PublicRoute path=\"/login\" restricted>\n              <AsyncLoginView />\n            </PublicRoute>\n            <PublicRoute path=\"/register\" restricted>\n              <AsyncRegisterView />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\">\n              {!isUserDataLoading && <AsyncContactsView />}\n            </PrivateRoute>\n            <PublicRoute>\n              <AsyncPageErrorView />\n            </PublicRoute>\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport serviceApi from '../../services/service-api';\nimport notification from '../../utils/notification';\n\nexport const signUp = createAsyncThunk(\n  'user/signup',\n  async (userData, { rejectWithValue }) => {\n    try {\n      const { data } = await serviceApi.user.registerUser(userData);\n      serviceApi.token.set(data.token);\n      notification.signUpSuccess(data.user.name);\n      return data;\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error;\n      notification.signUpError(status);\n      return rejectWithValue({ status, statusText });\n    }\n  },\n);\n\nexport const logIn = createAsyncThunk(\n  'user/login',\n  async (userAuthData, { rejectWithValue }) => {\n    try {\n      const { data } = await serviceApi.user.loginUser(userAuthData);\n      serviceApi.token.set(data.token);\n      notification.logInSuccess(data.user.name);\n      return data;\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error;\n      notification.logInError(status);\n      return rejectWithValue({ status, statusText });\n    }\n  },\n);\n\nexport const logOut = createAsyncThunk(\n  'user/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await serviceApi.user.logoutUser();\n      serviceApi.token.unset();\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error;\n      notification.logOutError(status);\n      return rejectWithValue({ status, statusText });\n    }\n  },\n);\n\nexport const refresh = createAsyncThunk(\n  'user/refresh',\n  async (_, { getState, rejectWithValue }) => {\n    try {\n      const state = getState();\n      const persistedToken = state.auth.token;\n\n      if (!persistedToken) {\n        return rejectWithValue({ status: null, statusText: 'No token found' });\n      }\n\n      serviceApi.token.set(persistedToken);\n      const { data } = await serviceApi.user.getCurrentUser();\n      return data;\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error;\n      notification.logOutError(status);\n      return rejectWithValue({ status, statusText });\n    }\n  },\n);\n","import { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst settings = {\n  position: 'top-center',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n}\n\nconst warning = (text) => {\n  toast.error(text, settings)\n}\n\nconst success = (text) => {\n  toast.success(text, settings)\n}\n\nconst signUpSuccess = (name) => {\n  notification.success(\n    `The user has been successfully created. Welcome, ${name}!`,\n  )\n}\n\nconst signUpError = (errorCode) => {\n  if (errorCode === 400) {\n    notification.warning('An account with the specified mail already exists.!')\n  }\n\n  if (errorCode === 500) {\n    notification.warning('There was a problem creating a user. Try again!')\n  }\n}\n\nconst logInSuccess = (name) => {\n  notification.success(`Welcome, ${name}!`)\n}\n\nconst logInError = (errorCode) => {\n  if (errorCode === 400) {\n    notification.warning('Wrong login or password')\n  }\n}\n\nconst logOutError = (errorCode) => {\n  if (errorCode === 500) {\n    notification.warning('Logout error, please try again')\n  }\n}\n\nconst duplicationNameSuccess = () => {\n  notification.warning('Сontact with this name is already present')\n}\n\nconst duplicationNumberSuccess = () => {\n  notification.warning('Сontact with this number is already present')\n}\n\nconst addContactSuccess = () => {\n  notification.success('Сontact added successfully')\n}\n\nconst addContactError = (errorCode) => {\n  if (errorCode === 400) {\n    notification.warning('Contact creation error')\n  }\n}\n\nconst fetchContactsError = (errorCode) => {\n  if (errorCode === 500) {\n    notification.warning('Server error. Try again')\n  }\n}\n\nconst deleteContactSuccess = () => {\n  notification.success('Contact removed successfully')\n}\n\nconst deleteContactError = (errorCode) => {\n  if (errorCode === 500) {\n    notification.warning('Server error. Try again')\n  }\n}\n\nconst updateContactSuccess = () => {\n  notification.success('Сontact updated successfully')\n}\n\nconst updateContactError = (errorCode) => {\n  if (errorCode === 400) {\n    notification.warning('Contact update error')\n  }\n}\n\nconst notification = {\n  warning,\n  success,\n  signUpSuccess,\n  logInSuccess,\n  signUpError,\n  logInError,\n  logOutError,\n  duplicationNameSuccess,\n  duplicationNumberSuccess,\n  addContactSuccess,\n  addContactError,\n  fetchContactsError,\n  deleteContactSuccess,\n  deleteContactError,\n  updateContactSuccess,\n  updateContactError,\n}\n\nexport default notification\n","import axios from 'axios';\n\nconst BASE_URL = 'https://connections-api.herokuapp.com';\n\naxios.defaults.baseURL = BASE_URL;\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst registerUser = async userData => {\n  return await axios.post('users/signup', userData);\n};\n\nconst getCurrentUser = async () => {\n  return await axios.get('/users/current');\n};\n\nconst loginUser = async userAuthData => {\n  return await axios.post('/users/login', userAuthData);\n};\n\nconst logoutUser = async () => {\n  return await axios.post('/users/logout');\n};\n\nconst getContacts = async () => {\n  return await axios.get('/contacts');\n};\n\nconst postContact = async contactData => {\n  return await axios.post('/contacts', contactData);\n};\n\nconst deleteContact = async contactId => {\n  return await axios.delete(`/contacts/${contactId}`);\n};\n\nconst patchContact = async (contactId, contactData) => {\n  return await axios.patch(`/contacts/${contactId}`, contactData);\n};\n\nconst api = {\n  user: {\n    registerUser,\n    getCurrentUser,\n    loginUser,\n    logoutUser,\n  },\n  contacts: {\n    getContacts,\n    postContact,\n    deleteContact,\n    patchContact,\n  },\n  token,\n};\n\nexport default api;\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport serviceApi from '../../services/service-api'\nimport notification from '../../utils/notification'\n\nexport const fetch = createAsyncThunk(\n  'contacts/fetch',\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await serviceApi.contacts.getContacts()\n      return data\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error\n      notification.fetchContactsError(status)\n      return rejectWithValue({ status, statusText })\n    }\n  },\n)\n\nexport const post = createAsyncThunk(\n  'contacts/post',\n  async (contactData, { rejectWithValue }) => {\n    try {\n      const { data } = await serviceApi.contacts.postContact(contactData)\n      notification.addContactSuccess()\n      return data\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error\n      notification.addContactError(status)\n      return rejectWithValue({ status, statusText })\n    }\n  },\n)\n\nexport const remove = createAsyncThunk(\n  'contacts/remove',\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await serviceApi.contacts.deleteContact(contactId)\n      notification.deleteContactSuccess()\n      return contactId\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error\n      notification.deleteContactError(status)\n      return rejectWithValue({ status, statusText })\n    }\n  },\n)\n\nexport const patch = createAsyncThunk(\n  'contacts/patch',\n  async ({ id, name, number }, { rejectWithValue }) => {\n    try {\n      const { data } = await serviceApi.contacts.patchContact(id, {\n        name,\n        number,\n      })\n      notification.updateContactSuccess()\n      return data\n    } catch (error) {\n      const {\n        response: { status, statusText },\n      } = error\n      notification.updateContactError(status)\n      return rejectWithValue({ status, statusText })\n    }\n  },\n)\n","export const getUserName = state => state.auth.user.name;\nexport const getUserEmail = state => state.auth.user.email;\nexport const getAuthStatus = state => state.auth.isLoggedIn;\nexport const getLoadingStatus = state => state.auth.isLoading;\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as contactsOperations from './contacts-operations'\n\nconst contactsSlice = createSlice({\n  name: 'contactItems',\n  initialState: {\n    items: [],\n    filter: '',\n    isLoading: false,\n    error: null,\n  },\n  reducers: {\n    resetContacts: (state) => {\n      state.items = []\n    },\n    changeFilter: (state, action) => {\n      state.filter = action.payload\n    },\n  },\n  extraReducers: {\n    [contactsOperations.fetch.pending]: (state) => {\n      state.isLoading = true\n    },\n    [contactsOperations.fetch.fulfilled]: (state, action) => {\n      state.isLoading = false\n      state.items = action.payload\n    },\n    [contactsOperations.fetch.rejected]: (state, action) => {\n      state.isLoading = false\n      state.error = action.payload\n    },\n    [contactsOperations.post.pending]: (state) => {\n      state.isLoading = true\n    },\n    [contactsOperations.post.fulfilled]: (state, action) => {\n      state.isLoading = false\n      state.items.push(action.payload)\n    },\n    [contactsOperations.post.rejected]: (state, action) => {\n      state.isLoading = false\n      state.error = action.payload\n    },\n    [contactsOperations.remove.pending]: (state) => {\n      state.isLoading = true\n    },\n    [contactsOperations.remove.fulfilled]: (state, action) => {\n      state.isLoading = false\n      state.items = state.items.filter(({ id }) => id !== action.payload)\n    },\n    [contactsOperations.remove.rejected]: (state, action) => {\n      state.isLoading = false\n      state.error = action.payload\n    },\n    [contactsOperations.patch.pending]: (state) => {\n      state.isLoading = true\n    },\n    [contactsOperations.patch.fulfilled]: (state, action) => {\n      state.isLoading = false\n      state.items = state.items.map((item) => {\n        if (item.id !== action.payload.id) return item\n        return action.payload\n      })\n    },\n    [contactsOperations.patch.rejected]: (state, action) => {\n      state.isLoading = false\n      state.error = action.payload\n    },\n  },\n})\n\nexport const { resetContacts, changeFilter } = contactsSlice.actions\nexport default contactsSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit';\nimport * as authOperations from './auth-operations';\n\nconst initialState = {\n  user: {\n    name: null,\n    email: null,\n  },\n  token: null,\n  isLoggedIn: false,\n  isLoading: false,\n  error: null,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.signUp.pending]: state => {\n      state.isLoading = true;\n    },\n    [authOperations.signUp.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isLoading = false;\n    },\n    [authOperations.signUp.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [authOperations.logIn.pending]: state => {\n      state.isLoading = true;\n    },\n    [authOperations.logIn.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n      state.isLoading = false;\n    },\n    [authOperations.logIn.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [authOperations.logOut.pending]: state => {\n      state.isLoading = true;\n    },\n    [authOperations.logOut.fulfilled]: (state, action) => {\n      state.user.name = null;\n      state.user.email = null;\n      state.token = null;\n      state.isLoggedIn = false;\n      state.isLoading = false;\n    },\n    [authOperations.logOut.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    [authOperations.refresh.pending]: state => {\n      state.isLoading = true;\n    },\n    [authOperations.refresh.fulfilled]: (state, action) => {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isLoading = false;\n    },\n    [authOperations.refresh.rejected]: (state, action) => {\n      state.isLoading = false;\n      state.isLoggedIn = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport authReducer from './auth/auth-slice';\nimport contactsReducer from './contacts/contacts-slice';\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst authPersistReducer = persistReducer(authPersistConfig, authReducer);\n\nconst rootReducer = combineReducers({\n  auth: authPersistReducer,\n  contacts: contactsReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devtools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n"],"sourceRoot":""}