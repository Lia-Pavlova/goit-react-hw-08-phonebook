{"version":3,"sources":["utils/utils.js","components/ContactsEditForm/CancelBtnStyle.module.css","components/ActionMenu/ActionMenu.styled.jsx","components/Modal/Modal.jsx","components/ContactsEditForm/ContactsEditForm.styled.jsx","components/ContactsEditForm/ContactsEditForm.jsx","components/ActionMenu/ActionMenu.jsx","components/Contacts/ContactsItem/ContactsItem.styled.jsx","components/Contacts/ContactsItem/ContactsItem.jsx","components/Contacts/ContactsList/ContactsList.styled.jsx","components/Contacts/ContactsList/ContactsList.jsx","views/ContactsView/ContactsView.styled.jsx","components/ContactsAddForm/ContactsAddForm.styled.jsx","components/ContactsAddForm/ContactsAddForm.jsx","views/ContactsView/ContactsView.jsx"],"names":["duplicateNumberChekingSuccess","contact","action","store","getState","contacts","isDuplicateNumber","type","Boolean","items","find","number","notification","duplicationNumberSuccess","filter","id","warning","duplicateNameChekingSuccess","isDuplicateName","name","duplicationNameSuccess","module","exports","Container","styled","div","style","position","top","left","transform","display","justifyContend","alignItems","width","height","background","border","borderRadius","boxShadow","p","ModalWindow","modalShow","modalHide","children","Modal","open","onClose","Box","sx","StyledPaper","Paper","StyledTextField","TextField","StyledButton","LoadingButton","ContactsEditForm","isLoading","useSelector","getLoadingStatus","dispatch","useDispatch","useState","setName","setNumber","handleSubmit","e","a","preventDefault","contactToUpdate","contactsOperations","elevation","className","onSubmit","required","label","variant","color","size","value","onChange","target","title","loading","loadingPosition","startIcon","s","cancelBtn","onClick","ActionMenu","modalOpen","setModalOpen","href","IconButton","edge","contactsOperation","StyledListItem","ListItem","ContactItem","secondaryAction","ListItemAvatar","Avatar","ListItemText","primary","StyledList","List","ContactList","filteredContacts","getFilteredContacts","useEffect","resetContacts","justifyContent","CircularProgress","map","StyledAddButton","Button","InputField","StyledMuiPhoneNumber","MuiPhoneNumber","ContactsAddForm","contactToAdd","defaultCountry","ContactsView","ContactsList"],"mappings":"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","file":"static/js/contacts-page.53f556a5.chunk.js","sourcesContent":["import notification from './notification'\nimport { store } from '../redux/store'\n\nconst NAME_PATTERN = \"^[a-zA-Zа-яА-Я]+((['-][a-zA-Zа-яА-Я])?[a-zA-Zа-яА-Я]*)*$\"\nconst EMAIL_PATTERN = '^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$'\nconst PASSWORD_PATTERN =\n  '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#%&])(?=.{7,16})'\n// const PHONE_NUMBER_PATTERN = '^[0-9]{3,15}$';\n\nexport const registrationDataValidationSuccess = (userData) => {\n  const { name, email, password, verificationPassword } = userData\n  const nameRegex = new RegExp(NAME_PATTERN)\n  const emailRegex = new RegExp(EMAIL_PATTERN)\n  const passwordRegex = new RegExp(PASSWORD_PATTERN)\n\n  if (!nameRegex.test(name)) {\n    notification.warning('Name does not meet the requirements!')\n    return false\n  }\n\n  if (!emailRegex.test(email)) {\n    notification.warning('Incorrect Email format entered!')\n    return false\n  }\n\n  if (!passwordRegex.test(password)) {\n    notification.warning('Password value does not meet requirements!')\n    return false\n  }\n\n  if (password !== verificationPassword) {\n    notification.warning('Password values do not match!')\n    return false\n  }\n  return true\n}\n\n// export const contactDataValidationSuccess = contactData => {\n//   const { number } = contactData;\n//   // const numberRegex = new RegExp(PHONE_NUMBER_PATTERN);\n\n//   if (!numberRegex.test(number)) {\n//     notification.warning('Incorrect number format entered!');\n//     return false;\n//   }\n//   return true;\n// };\n\nexport const contactDataValidationSuccess = (contactData) => {\n  const { name } = contactData\n  const nameRegex = new RegExp(NAME_PATTERN)\n\n  if (!nameRegex.test(name)) {\n    notification.warning('Incorrect name format entered!')\n    return false\n  }\n  return true\n}\n\nexport const duplicateNumberChekingSuccess = (contact, action = {}) => {\n  const { contacts } = store.getState()\n  let isDuplicateNumber = false\n\n  switch (action.type) {\n    case 'add':\n      isDuplicateNumber = Boolean(\n        contacts.items.find(({ number }) => number === contact.number),\n      )\n      if (isDuplicateNumber) notification.duplicationNumberSuccess()\n      return isDuplicateNumber\n    case 'edit':\n      isDuplicateNumber = Boolean(\n        contacts.items\n          .filter(({ id }) => id !== contact.id)\n          .find(({ number }) => number === contact.number),\n      )\n      if (isDuplicateNumber) notification.duplicationNumberSuccess()\n      return isDuplicateNumber\n    default:\n      notification.warning('something went wrong')\n  }\n}\n\nexport const duplicateNameChekingSuccess = (contact, action = {}) => {\n  const { contacts } = store.getState()\n  let isDuplicateName = false\n\n  switch (action.type) {\n    case 'add':\n      isDuplicateName = Boolean(\n        contacts.items.find(({ name }) => name === contact.name),\n      )\n      if (isDuplicateName) notification.duplicationNameSuccess()\n      return isDuplicateName\n    case 'edit':\n      isDuplicateName = Boolean(\n        contacts.items\n          .filter(({ id }) => id !== contact.id)\n          .find(({ name }) => name === contact.name),\n      )\n      if (isDuplicateName) notification.duplicationNameSuccess()\n      return isDuplicateName\n    default:\n      notification.warning('something went wrong')\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cancelBtn\":\"CancelBtnStyle_cancelBtn__l4v10\"};","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  ul {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li:not(:last-of-type) {\n    margin-right: 15px;\n  }\n`;\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\n\nexport const style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  display: 'flex',\n  justifyContend: 'center',\n  alignItems: 'center',\n  width: 340,\n  height: 370,\n  // bgcolor: 'background.paper',\n  background:\n    'linear-gradient(to right,#e9ce367a 0%,#f3a15d 30%,#ea2a2abb 50%,#f3a15d 70%,#e9ce367a 100%)',\n  border: '1px solid #000',\n  borderRadius: '25px',\n  boxShadow: 10,\n  p: 3,\n};\n\nconst ModalWindow = ({ modalShow, modalHide, children }) => {\n  return (\n    <Modal\n      open={modalShow}\n      onClose={modalHide}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>{children}</Box>\n    </Modal>\n  );\n};\n\nModalWindow.propTypes = {\n  modalShow: PropTypes.bool.isRequired,\n  modalHide: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default ModalWindow;\n","import styled from '@emotion/styled';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport TextField from '@mui/material/TextField';\nimport { Paper } from '@mui/material';\n\nexport const Container = styled.div`\n  box-sizing: border-box;\n  margin: 60px auto;\n  width: 340px;\n`;\n\nexport const StyledPaper = styled(Paper)`\n  padding: 10px;\n  border-radius: 20px;\n\n  h2 {\n    margin: 20px 0 0;\n    text-align: center;\n    color: rgb(83, 67, 65);\n    text-shadow: 1px 1px 3px rgba(59, 22, 4, 0.76);\n    font-family: 'Dancing Script', cursive;\n    font-size: 30px;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n\n    padding: 30px;\n  }\n`;\n\nexport const StyledTextField = styled(TextField)`\n  width: 100%;\n\n  &:not(:first-of-type) {\n    margin-top: 12px;\n  }\n`;\n\nexport const StyledButton = styled(LoadingButton)`\n  margin: 30px auto 0;\n  width: 140px;\n  border-radius: 3em;\n  background: linear-gradient(\n    to right,\n    #e9ce367a 0%,\n    #f7b705 50%,\n    #e9ce367a 100%\n  );\n  background-size: 200%;\n  background-position: 100%;\n  box-shadow: 3px 3px 6px #cbced1, -1px -1px 6px #cbced1;\n  transition: all 0.7s;\n\n  &:hover {\n    background: linear-gradient(\n      to right,\n      #e9ce367a 0%,\n      #f7b705 50%,\n      #e9ce367a 100%\n    );\n    background-size: 200%;\n    background-position: 0px;\n    box-shadow: none;\n  }\n`;\n","import { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport SaveIcon from '@mui/icons-material/Save'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\nimport s from './CancelBtnStyle.module.css'\nimport {\n  Container,\n  StyledTextField,\n  StyledButton,\n  StyledPaper,\n} from './ContactsEditForm.styled'\nimport { getLoadingStatus } from '../../redux/contacts/contacts-selectors'\nimport * as contactsOperations from '../../redux/contacts/contacts-operations'\nimport {\n  duplicateNameChekingSuccess,\n  duplicateNumberChekingSuccess,\n} from '../../utils/utils'\n\nconst ContactsEditForm = ({ contact, modalHide }) => {\n  const isLoading = useSelector(getLoadingStatus)\n  const dispatch = useDispatch()\n  const [name, setName] = useState(contact.name)\n  const [number, setNumber] = useState(contact.number)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const contactToUpdate = { id: contact.id, name, number }\n\n    // if (!contactDataValidationSuccess(contactToUpdate)) {\n    //   return;\n    // }\n    if (duplicateNameChekingSuccess(contactToUpdate, { type: 'edit' })) {\n      return\n    }\n    if (duplicateNumberChekingSuccess(contactToUpdate, { type: 'edit' })) {\n      return\n    }\n\n    await dispatch(contactsOperations.patch(contactToUpdate))\n    await modalHide()\n  }\n\n  return (\n    <Container>\n      <StyledPaper elevation={3} className=\"paper\">\n        <h2>Contact information:</h2>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <StyledTextField\n            required\n            label=\"Name\"\n            variant=\"standard\"\n            color=\"warning\"\n            size=\"small\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <StyledTextField\n            required\n            label=\"Phone number\"\n            variant=\"standard\"\n            color=\"warning\"\n            size=\"small\"\n            title=\"Must be 3-15 digits only\"\n            value={number}\n            onChange={(e) => setNumber(e.target.value)}\n          />\n          <StyledButton\n            type=\"submit\"\n            loading={isLoading}\n            loadingPosition=\"center\"\n            startIcon={<SaveIcon />}\n            variant=\"contained\"\n          >\n            Save\n          </StyledButton>\n          <StyledButton\n            className={s.cancelBtn}\n            type=\"submit\"\n            onClick={modalHide}\n            loadingPosition=\"center\"\n            startIcon={<RemoveCircleOutlineIcon />}\n            variant=\"contained\"\n          >\n            Cancel\n          </StyledButton>\n        </form>\n      </StyledPaper>\n    </Container>\n  )\n}\n\nContactsEditForm.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  modalHide: PropTypes.func.isRequired,\n}\n\nexport default ContactsEditForm\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Container from './ActionMenu.styled';\nimport * as contactsOperation from '../../redux/contacts/contacts-operations';\nimport ModalWindow from '../Modal';\nimport ContactsEditForm from '../ContactsEditForm';\n\nconst ActionMenu = ({ contact }) => {\n  const dispatch = useDispatch();\n  const [modalOpen, setModalOpen] = useState(false);\n\n  return (\n    <Container>\n      <ul>\n        <li>\n          <a href={`tel:${contact.number}`}>\n            <IconButton edge=\"end\" aria-label=\"call\">\n              <PhoneIcon />\n            </IconButton>\n          </a>\n        </li>\n        <li>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"edit\"\n            onClick={() => setModalOpen(true)}\n          >\n            <EditIcon />\n          </IconButton>\n        </li>\n        <li>\n          <IconButton\n            edge=\"end\"\n            aria-label=\"delete\"\n            onClick={() => dispatch(contactsOperation.remove(contact.id))}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </li>\n      </ul>\n      <ModalWindow modalShow={modalOpen} modalHide={() => setModalOpen(false)}>\n        <ContactsEditForm\n          contact={contact}\n          modalHide={() => setModalOpen(false)}\n        />\n      </ModalWindow>\n    </Container>\n  );\n};\n\nActionMenu.propTypes = {\n  contact: PropTypes.object,\n};\n\nexport default ActionMenu;\n","import styled from '@emotion/styled';\nimport ListItem from '@mui/material/ListItem';\n\nexport const StyledListItem = styled(ListItem)`\n  &:nth-of-type(2n + 1) {\n    background-color: rgba(241, 241, 241, 0.5);\n  }\n\n  &:nth-of-type(2n) {\n    background-color: rgba(83, 67, 65, 0.1);\n  }\n\n  .name {\n    width: 43%;\n    flex-grow: 0;\n    color: #6e5b32;\n    font-weight: 600;\n    font-size: 20px;\n    font-family: Dancing Script;\n  }\n\n  .number {\n    color: #524240;\n    // text-shadow: -1px -1px 10px rgba(59, 22, 4, 0.76);\n    font-weight: 600;\n    font-family: Dancing Script;\n\n    flex-grow: 1;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  background-color: rgba(218, 209, 197);\n\n  &:nth-of-type(1) {\n    justify-self: start;\n  }\n\n  &:nth-of-type(2) {\n    justify-self: center;\n  }\n`;\n\n// export const NumberContainer = styled.div`\n//   align-items:center;\n// `\n","import PropTypes from 'prop-types';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport PersonIcon from '@mui/icons-material/Person';\n\n// import Link from '@mui/material/Link';\nimport ActionMenu from '../../ActionMenu';\nimport { StyledListItem } from './ContactsItem.styled';\n\nconst ContactItem = ({ contact }) => {\n  return (\n    <StyledListItem secondaryAction={<ActionMenu contact={contact} />}>\n      <ListItemAvatar>\n        <Avatar>\n          <PersonIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={contact.name} className=\"name\" />\n      <ListItemText primary={contact.number} className=\"number\" />\n    </StyledListItem>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import styled from '@emotion/styled';\nimport List from '@mui/material/List';\n\nconst StyledList = styled(List)`\n  padding-bottom: 100px;\n  color: #6e5b32;\n  font-weight: 600;\n  font-size: 40px;\n  max-width: 60%;\n  margin: 0 auto;\n`;\n\nexport default StyledList;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsOperations from '../../../redux/contacts/contacts-operations';\nimport ContactItem from '../ContactsItem';\nimport {\n  getFilteredContacts,\n  getLoadingStatus,\n} from '../../../redux/contacts/contacts-selectors';\nimport StyledList from './ContactsList.styled';\nimport { resetContacts } from '../../../redux/contacts/contacts-slice';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const isLoading = useSelector(getLoadingStatus);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetch());\n    return () => dispatch(resetContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100vh',\n          }}\n        >\n          <CircularProgress sx={{ color: 'orange' }} />\n        </Box>\n      ) : (\n        <StyledList>\n          {filteredContacts.map(contact => (\n            <ContactItem key={contact.id} contact={contact} />\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nconst StyledAddButton = styled(Button)`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  transform: translate(-50%, -50%);\n  height: 60px;\n  border-radius: 50%;\n  background: linear-gradient(\n    to right,\n    #e9ce367a 0%,\n    #f7b705 50%,\n    #e9ce367a 100%\n  );\n  background-size: 200%;\n  background-position: 100%;\n  box-shadow: 3px 3px 6px #cbced1, -1px -1px 6px #cbced1;\n  transition: all 0.7s;\n\n  &:hover {\n    background: linear-gradient(\n      to right,\n      #e9ce367a 0%,\n      #f7b705 50%,\n      #e9ce367a 100%\n    );\n    background-size: 200%;\n    background-position: 0px;\n    box-shadow: none;\n  }\n`;\n\nexport default StyledAddButton;\n","import styled from '@emotion/styled';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport InputField from '@mui/material/TextField';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport { Paper } from '@mui/material';\n\nexport const Container = styled.div`\n  box-sizing: border-box;\n  margin: 60px auto;\n  width: 340px;\n`;\n\nexport const StyledPaper = styled(Paper)`\n  padding: 10px;\n  border-radius: 20px;\n\n  h2 {\n    margin: 20px 0 0;\n    text-align: center;\n    color: rgb(83, 67, 65);\n    text-shadow: 1px 1px 3px rgba(59, 22, 4, 0.76);\n    // font-weight: 700;\n    font-size: 30px;\n    font-family: 'Dancing Script', cursive;\n  }\n\n  form {\n    display: flex;\n    flex-direction: column;\n\n    padding: 30px;\n  }\n`;\n\nexport const StyledTextField = styled(InputField)`\n  width: 100%;\n\n  &:not(:first-of-type) {\n    margin-top: 12px;\n  }\n`;\nexport const StyledMuiPhoneNumber = styled(MuiPhoneNumber)`\n  width: 100%;\n\n  &:not(:first-of-type) {\n    margin-top: 12px;\n  }\n`;\n\nexport const StyledButton = styled(LoadingButton)`\n  margin: 30px auto 0;\n  width: 110px;\n\n  border-radius: 3em;\n  background: linear-gradient(\n    to right,\n    #e9ce367a 0%,\n    #f7b705 50%,\n    #e9ce367a 100%\n  );\n  background-size: 200%;\n  background-position: 100%;\n  box-shadow: 3px 3px 6px #cbced1, -1px -1px 6px #cbced1;\n  transition: all 0.7s;\n\n  &:hover {\n    background: linear-gradient(\n      to right,\n      #e9ce367a 0%,\n      #f7b705 50%,\n      #e9ce367a 100%\n    );\n    background-size: 200%;\n    background-position: 0px;\n    box-shadow: none;\n  }\n`;\n","import { useState } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport AddCircleIcon from '@mui/icons-material/AddCircle'\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline'\n\nimport s from '../ContactsEditForm/CancelBtnStyle.module.css'\nimport {\n  Container,\n  StyledTextField,\n  StyledMuiPhoneNumber,\n  StyledButton,\n  StyledPaper,\n} from './ContactsAddForm.styled'\nimport { getLoadingStatus } from '../../redux/contacts/contacts-selectors'\nimport * as contactsOperations from '../../redux/contacts/contacts-operations'\nimport {\n  contactDataValidationSuccess,\n  duplicateNameChekingSuccess,\n  duplicateNumberChekingSuccess,\n} from '../../utils/utils'\n\nconst ContactsAddForm = ({ modalHide }) => {\n  const isLoading = useSelector(getLoadingStatus)\n  const dispatch = useDispatch()\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const contactToAdd = { name, number }\n\n    // if (!contactDataValidationSuccess(contactToAdd)) {\n    //   return\n    // }\n\n    if (duplicateNameChekingSuccess(contactToAdd, { type: 'add' })) {\n      return\n    }\n    if (duplicateNumberChekingSuccess(contactToAdd, { type: 'add' })) {\n      return\n    }\n\n    await dispatch(contactsOperations.post(contactToAdd))\n    await modalHide()\n  }\n\n  return (\n    <Container>\n      <StyledPaper elevation={3} className=\"paper\">\n        <h2>Contact information:</h2>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <StyledTextField\n            required=\"true\"\n            label=\"Name\"\n            name=\"name\"\n            type=\"text\"\n            variant=\"standard\"\n            title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n            color=\"warning\"\n            size=\"small\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <StyledMuiPhoneNumber\n            required=\"true\"\n            label=\"Phone number\"\n            name=\"number\"\n            type=\"tel\"\n            variant=\"standard\"\n            data-cy=\"user-phone\"\n            defaultCountry={'ua'}\n            color=\"warning\"\n            size=\"small\"\n            // title=\"Must be 3-15 digits only\"\n            value={number}\n            onChange={(e) => setNumber(e)}\n          />\n          <StyledButton\n            type=\"submit\"\n            loading={isLoading}\n            loadingPosition=\"center\"\n            startIcon={<AddCircleIcon />}\n            variant=\"contained\"\n          >\n            Add\n          </StyledButton>\n          <StyledButton\n            className={s.cancelBtn}\n            type=\"submit\"\n            onClick={modalHide}\n            loadingPosition=\"center\"\n            startIcon={<RemoveCircleOutlineIcon />}\n            variant=\"contained\"\n          >\n            Cancel\n          </StyledButton>\n        </form>\n      </StyledPaper>\n    </Container>\n  )\n}\n\nContactsAddForm.propTypes = {\n  modalHide: PropTypes.func.isRequired,\n}\n\nexport default ContactsAddForm\n","import { useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport ContactsList from '../../components/Contacts/ContactsList';\nimport StyledAddButton from './ContactsView.styled';\nimport ContactsAddForm from '../../components/ContactsAddForm';\nimport ModalWindow from '../../components/Modal';\n\nconst ContactsView = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  return (\n    <>\n      <ContactsList />\n      <StyledAddButton variant=\"contained\" onClick={() => setModalOpen(true)}>\n        <AddIcon />\n      </StyledAddButton>\n      <ModalWindow modalShow={modalOpen} modalHide={() => setModalOpen(false)}>\n        <ContactsAddForm modalHide={() => setModalOpen(false)} />\n      </ModalWindow>\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"sourceRoot":""}